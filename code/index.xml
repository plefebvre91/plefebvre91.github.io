<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codes on Pierre Lefebvre</title>
    <link>/code/</link>
    <description>Recent content in Codes on Pierre Lefebvre</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Thu, 10 Mar 2022 14:44:50 +0100</lastBuildDate>
    <atom:link href="/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[C&#43;&#43;] Mouvement de cam√©ra SFML</title>
      <link>/code/camera-shake/</link>
      <pubDate>Thu, 10 Mar 2022 14:44:50 +0100</pubDate>
      <guid>/code/camera-shake/</guid>
      <description>Secousse de cam√©ra avec SFML Dans cette pr√©sentation, Squirrel Eiserloh pr√©sente de fa√ßon g√©n√©rale comment ajouter des mouvements (translations fluides, secousses) √† la cam√©ra d&amp;rsquo;une sc√®ne en deux ou trois dimensions. On se propose d&amp;rsquo;appliquer cela sur un exemple de sc√®ne 2D √©crite en C++ avec SFML : l&amp;rsquo;appui sur Espace d√©clenche une explosion qui fait vaciller la cam√©ra.&#xA;Le r√©sultat final ressemble √† ceci (la qualit√© est un peu d√©grad√©e par le format GIF) :</description>
    </item>
    <item>
      <title>[GLSL] √âlectrocardiogramme</title>
      <link>/code/ecg/</link>
      <pubDate>Tue, 01 Mar 2022 20:43:14 +0100</pubDate>
      <guid>/code/ecg/</guid>
      <description>Dessiner un √©lectrocardiogramme avec un shader On se propose de dessiner une courbe d&amp;rsquo;√©lectrocardiogramme avec un shader (GLSL). Il s&amp;rsquo;agit d&amp;rsquo;une r√©presentation approximative, le but n&amp;rsquo;est pas de simuler quoique ce soit mais juste de manipuler un shader.&#xA;Le code complet est disponible sur le d√©p√¥t et le r√©sultat final ressemble √† √ßa (la qualit√© est un peu d√©grad√©e par le format GIF):&#xA;M√©thode Avec un langage plus classique, pour dessiner ce genre de courbe la m√©thode suivie aurait probablement d&amp;rsquo;impl√©menter une application de type : $$f_t : \mathbb{R} \rightarrow \mathbb{R}$$</description>
    </item>
    <item>
      <title>[Godot] Premier jeu</title>
      <link>/code/basket/</link>
      <pubDate>Fri, 25 Feb 2022 13:12:20 +0100</pubDate>
      <guid>/code/basket/</guid>
      <description>La boule de papier Description Premier essai de jeu (2D) avec Godot. Barre d&amp;rsquo;espace pour lancer la boule.&#xA;üéÆ Cliquez ici pour jouer</description>
    </item>
    <item>
      <title>[C&#43;&#43;] Les quadtree pour les collisions 2D</title>
      <link>/code/quadtree/</link>
      <pubDate>Sat, 19 Feb 2022 20:03:38 +0100</pubDate>
      <guid>/code/quadtree/</guid>
      <description>Les quadtrees pour les collisions en 2D On se propose d&amp;rsquo;impl√©menter (C++ et SFML) une structure d&amp;rsquo;arbre quaternaire (quadtree) pour d√©tecter les collisions d&amp;rsquo;un ensemble d&amp;rsquo;objets.&#xA;Le r√©sultat final ressemble √† √ßa:&#xA;Le code de ce qui est d√©crit ici est disponible sur le d√©p√¥t sfml-quadtree-collision.&#xA;Contexte On consid√®re un ensemble d&amp;rsquo;objets pouvant se d√©placer, et on souhaite pouvoir mettre √† jour les leurs trajectoires en fonction des √©ventuelles collisions qui se produisent entre ces objets.</description>
    </item>
    <item>
      <title>[C&#43;&#43;] Volley</title>
      <link>/code/volley/</link>
      <pubDate>Thu, 10 Feb 2022 14:00:20 +0100</pubDate>
      <guid>/code/volley/</guid>
      <description>Jeu de volley Description Jeu de volley en 2D r√©alis√© en C++ avec SFML.&#xA;Code Le code est ici : ici</description>
    </item>
    <item>
      <title>[CaML] Maillage</title>
      <link>/code/mesh/</link>
      <pubDate>Wed, 10 Nov 2021 13:56:20 +0100</pubDate>
      <guid>/code/mesh/</guid>
      <description>Maillage Description Programme permettant r√©aliser un maillage triangulaire d&amp;rsquo;une forme quelconque.&#xA;Code Le code est ici : ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Fractale de Von Koch</title>
      <link>/code/von-koch/</link>
      <pubDate>Tue, 09 Nov 2021 14:09:52 +0100</pubDate>
      <guid>/code/von-koch/</guid>
      <description>Fractale de Von Koch Description Programme permettant de tracer la fractale de Von Koch.&#xA;Code Le code est ici : ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Courbe polaire</title>
      <link>/code/polar/</link>
      <pubDate>Tue, 09 Nov 2021 12:36:14 +0100</pubDate>
      <guid>/code/polar/</guid>
      <description>Courbe polaire Description Programme permettant de tracer une courbe polaire √† partir de son √©quation.&#xA;Code Le code est ici : ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Fractale de Vicsek</title>
      <link>/code/vicsek/</link>
      <pubDate>Sun, 07 Nov 2021 13:25:07 +0100</pubDate>
      <guid>/code/vicsek/</guid>
      <description>Fractale de Vicsek Description Le carr√© unit√© est d√©compos√© en neuf sous-carreaux sur la grille r√©guli√®re 3 par 3. Les carreaux dans les coins sont enlev√©s, les cinq autres restent. Ce proc√©d√© est r√©cursivement r√©p√©t√© pour les carreaux gard√©s. Wikip√©dia&#xA;Code Le code est ici : ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Snake</title>
      <link>/code/snake/</link>
      <pubDate>Fri, 05 Nov 2021 13:10:43 +0100</pubDate>
      <guid>/code/snake/</guid>
      <description>Snake Description Jeu de Snake classique. Le serpent avance vers le curseur de la souris (pas besoin de cliquer).&#xA;‚ö†Ô∏è Ne pas placer la souris derri√®re la t√™te dans la direction oppos√©e du serpent.&#xA;Code Le code est ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Torus</title>
      <link>/code/torus/</link>
      <pubDate>Thu, 04 Nov 2021 17:25:07 +0100</pubDate>
      <guid>/code/torus/</guid>
      <description>Tore Description Code Le code est ici : ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Sphere</title>
      <link>/code/sphere/</link>
      <pubDate>Tue, 02 Nov 2021 17:27:43 +0100</pubDate>
      <guid>/code/sphere/</guid>
      <description>Sph√®re Description La sph√®re est g√©n√©r√©e de fa√ßon r√©cursive en partant d&amp;rsquo;un t√©tra√®dre de base, auquel on repousse du centre (via une normalisation des vecteurs correspondants) les m√©dianes des triangles de chacune de ses faces.&#xA;Le param√®tre pass√© √† la fonction de dessin correspond au nombre d&amp;rsquo;explosions √† r√©aliser sur le premier solide. Sur l&amp;rsquo;illustration il vaut 5.&#xA;Code Le code est ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Triangle de Sierpinkski</title>
      <link>/code/sierpinkski-triangle/</link>
      <pubDate>Mon, 01 Nov 2021 17:24:51 +0100</pubDate>
      <guid>/code/sierpinkski-triangle/</guid>
      <description>Triangle de Sierpinski Description C&amp;rsquo;est une fractale g√©n√©r√©e √† partir d&amp;rsquo;un triangle de base, qu&amp;rsquo;on divise en 3 triangles ayant 2 √† 2 un sommet en commun et correspondant aux milieux des c√¥t√©s du premier triangle.&#xA;Dans le code, les triangles de plus petite taille sont ajout√©s r√©cursivement aux triangles existants. Le param√®tre pass√© √† la fonction de dessin correspond au nombre de division √† effectuer. Sur l&amp;rsquo;illustration il vaut 6.</description>
    </item>
    <item>
      <title>[CaML] Tapis de Sierpinski</title>
      <link>/code/sierpinkski-carpet/</link>
      <pubDate>Sun, 31 Oct 2021 17:24:55 +0100</pubDate>
      <guid>/code/sierpinkski-carpet/</guid>
      <description>Tapis de Sierpinski Description C&amp;rsquo;est une fractale g√©n√©r√©e √† partir d&amp;rsquo;un carr√© de base, autour duquel on ajoute 8 carr√©s dispos√©s sur les bords d&amp;rsquo;une grille de 3x3.&#xA;Dans le code, les carr√©s de plus petite taille sont ajout√©s r√©cursivement aux carr√©s existants. Le param√®tre pass√© √† la fonction de dessin correspond au nombre de division √† effectuer. Sur l&amp;rsquo;illustration il vaut 4.&#xA;Code Le code est ici&#xA;R√©sultat </description>
    </item>
    <item>
      <title>[CaML] Mod√©lisation tumorale</title>
      <link>/code/tumor/</link>
      <pubDate>Fri, 12 Feb 2021 20:43:14 +0100</pubDate>
      <guid>/code/tumor/</guid>
      <description>Mod√©lisation tumorale Ce travail avait √©t√© r√©alis√© pendant mes √©tudes, o√π j&amp;rsquo;avais √©t√© suivi par Ang√©lique St√©phanou, charg√©e de Recherche en biologie computationnelle au CNRS. Je n&amp;rsquo;ai produit que le code pour la simulation et la mod√©le du vaisseau.&#xA;Le but √©tait de r√©aliser une mod√©lisation de la croissance d&amp;rsquo;une tumeur canc√©reuse. La premi√®re partie se concentre sur un mod√®le de croissance simple, sans vascularisation. La seconde y ajoute un facteur de croissance permettant la cr√©ation d&amp;rsquo;un r√©seau vasculaire (angiog√©n√®se) qui alimente la tumeur.</description>
    </item>
    <item>
      <title>[C&#43;&#43;] 5 fa√ßons de coder un pixel</title>
      <link>/code/pixel/</link>
      <pubDate>Sun, 03 Nov 2019 07:23:12 +0100</pubDate>
      <guid>/code/pixel/</guid>
      <description>Pourquoi faire simple quand on peut faire compliqu√© ? Pour faire un article. Nous allons va voir ici au travers d&amp;rsquo;un exemple pourquoi le choix de la repr√©sentation d&amp;rsquo;une donn√©e, ici un pixel, peut influer sur les performances g√©n√©rales.&#xA;On se propose ici de parcourir diff√©rentes repr√©sentation d&amp;rsquo;une donn√©e destin√©e √† contenir les composantes d&amp;rsquo;une couleur au format RGBA (tout ceci est √©videmment applicable √† d&amp;rsquo;autres formats). Il existe plusieurs fa√ßons de coder une couleur, on choisira celle utilisant 4 entiers compris entre 0 et 255 pour chaque composante : rouge, vert, bleu, et transparence.</description>
    </item>
  </channel>
</rss>
