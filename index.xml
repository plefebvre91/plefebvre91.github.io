<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pierre Lefebvre</title>
    <link>/</link>
    <description>Recent content on Pierre Lefebvre</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Tue, 01 Mar 2022 20:43:14 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[GLSL] √âlectrocardiogramme</title>
      <link>/code/ecg/</link>
      <pubDate>Tue, 01 Mar 2022 20:43:14 +0100</pubDate>
      
      <guid>/code/ecg/</guid>
      <description>Dessiner un √©lectrocardiogramme avec un shader On se propose de dessiner une courbe d&amp;rsquo;√©lectrocardiogramme avec un shader (GLSL). Il s&amp;rsquo;agit d&amp;rsquo;une r√©presentation approximative, le but n&amp;rsquo;est pas de simuler quoique ce soit mais juste de manipuler un shader.
Le code complet est disponible sur le d√©p√¥t et le r√©sultat final ressemble √† √ßa (la qualit√© est un peu d√©grad√©e par le format GIF):
M√©thode Avec un langage plus classique, pour dessiner ce genre de courbe la m√©thode suivie aurait probablement d&amp;rsquo;impl√©menter une application de type : $$f_t : \mathbb{R} \rightarrow \mathbb{R}$$</description>
    </item>
    
    <item>
      <title>[Godot] Premier jeu</title>
      <link>/code/basket/</link>
      <pubDate>Fri, 25 Feb 2022 13:12:20 +0100</pubDate>
      
      <guid>/code/basket/</guid>
      <description>La boule de papier Description Premier essai de jeu (2D) avec Godot. Barre d&amp;rsquo;espace pour lancer la boule.
üéÆ Cliquez ici pour jouer</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] Les quadtree pour les collisions 2D</title>
      <link>/code/quadtree/</link>
      <pubDate>Sat, 19 Feb 2022 20:03:38 +0100</pubDate>
      
      <guid>/code/quadtree/</guid>
      <description>Les quadtrees pour les collisions en 2D On se propose d&amp;rsquo;impl√©menter (C++ et SFML) une structure d&amp;rsquo;arbre quaternaire (quadtree) pour d√©tecter les collisions d&amp;rsquo;un ensemble d&amp;rsquo;objets.
Le r√©sultat final ressemble √† √ßa:
Le code de ce qui est d√©crit ici est disponible sur le d√©p√¥t demo-quadtree-collision.
Contexte On consid√®re un ensemble d&amp;rsquo;objets pouvant se d√©placer, et on souhaite pouvoir mettre √† jour les leurs trajectoires en fonction des √©ventuelles collisions qui se produisent entre ces objets.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] Volley</title>
      <link>/code/volley/</link>
      <pubDate>Thu, 10 Feb 2022 14:00:20 +0100</pubDate>
      
      <guid>/code/volley/</guid>
      <description>Jeu de volley Description Jeu de volley en 2D r√©alis√© en C++ avec SFML.
Code Le code est ici : ici</description>
    </item>
    
    <item>
      <title>[CaML] Maillage</title>
      <link>/code/mesh/</link>
      <pubDate>Wed, 10 Nov 2021 13:56:20 +0100</pubDate>
      
      <guid>/code/mesh/</guid>
      <description>Maillage Description Programme permettant r√©aliser un maillage triangulaire d&amp;rsquo;une forme quelconque.
Code Le code est ici : ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Fractale de Von Koch</title>
      <link>/code/von-koch/</link>
      <pubDate>Tue, 09 Nov 2021 14:09:52 +0100</pubDate>
      
      <guid>/code/von-koch/</guid>
      <description>Fractale de Von Koch Description Programme permettant de tracer la fractale de Von Koch.
Code Le code est ici : ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Courbe polaire</title>
      <link>/code/polar/</link>
      <pubDate>Tue, 09 Nov 2021 12:36:14 +0100</pubDate>
      
      <guid>/code/polar/</guid>
      <description>Courbe polaire Description Programme permettant de tracer une courbe polaire √† partir de son √©quation.
Code Le code est ici : ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Fractale de Vicsek</title>
      <link>/code/vicsek/</link>
      <pubDate>Sun, 07 Nov 2021 13:25:07 +0100</pubDate>
      
      <guid>/code/vicsek/</guid>
      <description>Fractale de Vicsek Description  Le carr√© unit√© est d√©compos√© en neuf sous-carreaux sur la grille r√©guli√®re 3 par 3. Les carreaux dans les coins sont enlev√©s, les cinq autres restent. Ce proc√©d√© est r√©cursivement r√©p√©t√© pour les carreaux gard√©s. Wikip√©dia
 Code Le code est ici : ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Snake</title>
      <link>/code/snake/</link>
      <pubDate>Fri, 05 Nov 2021 13:10:43 +0100</pubDate>
      
      <guid>/code/snake/</guid>
      <description>Snake Description Jeu de Snake classique. Le serpent avance vers le curseur de la souris (pas besoin de cliquer).
‚ö†Ô∏è Ne pas placer la souris derri√®re la t√™te dans la direction oppos√©e du serpent.
Code Le code est ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Torus</title>
      <link>/code/torus/</link>
      <pubDate>Thu, 04 Nov 2021 17:25:07 +0100</pubDate>
      
      <guid>/code/torus/</guid>
      <description>Tore Description Code Le code est ici : ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Sphere</title>
      <link>/code/sphere/</link>
      <pubDate>Tue, 02 Nov 2021 17:27:43 +0100</pubDate>
      
      <guid>/code/sphere/</guid>
      <description>Sph√®re Description La sph√®re est g√©n√©r√©e de fa√ßon r√©cursive en partant d&amp;rsquo;un t√©tra√®dre de base, auquel on repousse du centre (via une normalisation des vecteurs correspondants) les m√©dianes des triangles de chacune de ses faces.
Le param√®tre pass√© √† la fonction de dessin correspond au nombre d&amp;rsquo;explosions √† r√©aliser sur le premier solide. Sur l&amp;rsquo;illustration il vaut 5.
Code Le code est ici
R√©sultat </description>
    </item>
    
    <item>
      <title>[CaML] Triangle de Sierpinkski</title>
      <link>/code/sierpinkski-triangle/</link>
      <pubDate>Mon, 01 Nov 2021 17:24:51 +0100</pubDate>
      
      <guid>/code/sierpinkski-triangle/</guid>
      <description>Triangle de Sierpinski Description C&amp;rsquo;est une fractale g√©n√©r√©e √† partir d&amp;rsquo;un triangle de base, qu&amp;rsquo;on divise en 3 triangles ayant 2 √† 2 un sommet en commun et correspondant aux milieux des c√¥t√©s du premier triangle.
Dans le code, les triangles de plus petite taille sont ajout√©s r√©cursivement aux triangles existants. Le param√®tre pass√© √† la fonction de dessin correspond au nombre de division √† effectuer. Sur l&amp;rsquo;illustration il vaut 6.</description>
    </item>
    
    <item>
      <title>[CaML] Tapis de Sierpinski</title>
      <link>/code/sierpinkski-carpet/</link>
      <pubDate>Sun, 31 Oct 2021 17:24:55 +0100</pubDate>
      
      <guid>/code/sierpinkski-carpet/</guid>
      <description>Tapis de Sierpinski Description C&amp;rsquo;est une fractale g√©n√©r√©e √† partir d&amp;rsquo;un carr√© de base, autour duquel on ajoute 8 carr√©s dispos√©s sur les bords d&amp;rsquo;une grille de 3x3.
Dans le code, les carr√©s de plus petite taille sont ajout√©s r√©cursivement aux carr√©s existants. Le param√®tre pass√© √† la fonction de dessin correspond au nombre de division √† effectuer. Sur l&amp;rsquo;illustration il vaut 4.
Code Le code est ici
R√©sultat </description>
    </item>
    
    <item>
      <title>Ressources</title>
      <link>/resources/</link>
      <pubDate>Sun, 17 Oct 2021 11:29:52 +0200</pubDate>
      
      <guid>/resources/</guid>
      <description>Ressources Les sources LateX sont pr√©sentes sur le d√©p√¥t.
Cours  [PDF] Introduction √† Git  Autres  [PDF] Cache et alignement [PDF] Pipeline d&amp;rsquo;instructions [PDF] Arbre quaternaire  Trucs pratiques Aliases pour Bash # Emacs alias emacs=&amp;#39;emacs -nw&amp;#39;  # Git alias gd=&amp;#39;git diff&amp;#39; alias gl=&amp;#39;git log --decorate --graph --all --oneline -15&amp;#39; alias gll=&amp;#39;git log --decorate --graph --all --oneline&amp;#39; alias gs=&amp;#39;git status&amp;#39;  # Unix commands alias l=&amp;#39;ls -CF&amp;#39; alias la=&amp;#39;ls -A&amp;#39; alias ll=&amp;#39;ls -alF&amp;#39; alias ls=&amp;#39;ls --color=auto&amp;#39; alias md=&amp;#39;mkdir&amp;#39; alias del=&amp;#39;rm *~ \#* 2&amp;amp;&amp;gt; /dev/null || true&amp;#39; alias grep=&amp;#39;grep --color&amp;#39;  # Debug / profiling alias memreport=&amp;#39;ms_print&amp;#39; alias memusage=&amp;#39;valgrind --trace-children=yes --tool=massif&amp;#39;  # Python alias virtenv=&amp;#39;python3 -m venv .</description>
    </item>
    
    <item>
      <title>Design #3 - Drugswar</title>
      <link>/post/design-1-drugswar/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/design-1-drugswar/</guid>
      <description>L&amp;rsquo;id√©e est d&amp;rsquo;essayer de constituer un mini portfolio avec des designs (application ou site web). Il pourra s&amp;rsquo;agir soit du rajeunissement d&amp;rsquo;une ancienne interface graphique, soit d&amp;rsquo;une cr√©ation personnelle. Tout ceci est r√©alis√© √† l&amp;rsquo;aide Gravit Designer.
 Pour le premier article j&amp;rsquo;ai choisi de r√©nover une partie de l&amp;rsquo;interface de Drugwars, un jeu de strat√©gie dans lequel on incarne un dealer dans les rues de New-York. A l&amp;rsquo;origine, le jeu √©tait sorti sur DOS.</description>
    </item>
    
    <item>
      <title>Design #2 - un site web</title>
      <link>/post/design-2-site/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/design-2-site/</guid>
      <description>L&amp;rsquo;id√©e est d&amp;rsquo;essayer de constituer un mini portfolio avec des designs (application ou site web). Il pourra s&amp;rsquo;agir soit du rajeunissement d&amp;rsquo;une ancienne interface graphique, soit d&amp;rsquo;une cr√©ation personnelle. Tout ceci est r√©alis√© √† l&amp;rsquo;aide Gravit Designer.
 Il s&amp;rsquo;agit ici d&amp;rsquo;une cr√©ation personnelle d&amp;rsquo;un site permettant de pr√©senter des clich√©s, agr√©ment√©s d&amp;rsquo;articles. Les photos ne sont soumises √† aucun droit.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] 5 fa√ßons de coder un pixel</title>
      <link>/code/five-ways-to-code-a-pixel/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/code/five-ways-to-code-a-pixel/</guid>
      <description>Pourquoi faire simple quand on peut faire compliqu√© ? Pour faire un article. Nous allons va voir ici au travers d&amp;rsquo;un exemple pourquoi le choix de la repr√©sentation d&amp;rsquo;une donn√©e, ici un pixel, peut influer sur les performances g√©n√©rales.
 On se propose ici de parcourir diff√©rentes repr√©sentation d&amp;rsquo;une donn√©e destin√©e √† contenir les composantes d&amp;rsquo;une couleur au format RGBA (tout ceci est √©videmment applicable √† d&amp;rsquo;autres formats). Il existe plusieurs fa√ßons de coder une couleur, on choisira celle utilisant 4 entiers compris entre 0 et 255 pour chaque composante : rouge, vert, bleu, et transparence.</description>
    </item>
    
    <item>
      <title>Design #1 - compte bancaire</title>
      <link>/post/design-3-bank/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/design-3-bank/</guid>
      <description>L&amp;rsquo;id√©e est d&amp;rsquo;essayer de constituer un mini portfolio avec des designs (application ou site web). Il pourra s&amp;rsquo;agir soit du rajeunissement d&amp;rsquo;une ancienne interface graphique, soit d&amp;rsquo;une cr√©ation personnelle. Tout ceci est r√©alis√© √† l&amp;rsquo;aide Gravit Designer.
 Il s&amp;rsquo;agit ici d&amp;rsquo;un tableau de bord de compte bancaire</description>
    </item>
    
  </channel>
</rss>
